<?xml version="1.0" encoding="UTF-8"?>
<svg id="compass" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 256">
  <defs>
    <style>
      .compass-circle {
        fill: none;
        stroke-width: 3px;
        stroke: #666;
      }
      .compass-needle {
        fill: #f00;
      }
      .compass-n {
        fill: #fff;
        font-family: Arial;
        font-size: 30px;
        font-weight: bold;
      }
    </style>
  </defs>

  <!-- Compass circle -->
  <circle id="circle" class="compass-circle" cx="256" cy="128" r="80"/>
  <polygon class="compass-needle" points="256,60 250,120 262,120"/>
  <!-- Rotating group containing needle and N marker -->
  <g id="compass-rotating" transform="rotate(0, 256, 128)">
    <!-- North needle (pointing up when heading is 0) -->
    

    <!-- N letter at top -->
    <text class="compass-n" x="255" y="55" text-anchor="middle">N</text>
  </g>

  <!-- Compass label -->
  <text x="10" y="40" style="font-family: Arial; font-size: 50px; font-weight: bold; fill: white;">Compass</text>

  <script type="text/javascript">
//<![CDATA[ // this is to make javascript work in the SVG, leave it alone

    function updateSVG(instrumentValue){
    // ========================================
    // STUDENT EDIT ZONE
    // This sections controls how the gauge displays
    // ========================================

    /**
     * Updates the compass display
     * - The compass rotates to show heading direction
     * - 0째 = North (N points up)
     * - 90째 = East (N points right)
     * - 180째 = South (N points down)
     * - 270째 = West (N points left)
     */

      // Normalize heading to 0-360 range
      const normalizedHeading = ((instrumentValue % 360) + 360) % 360;

      // Get the rotating compass group element
      const compassRotating = document.getElementById('compass-rotating');
      if (!compassRotating) {
        console.log('Cant find element to animate');
        return;
      }

      // Rotate the compass so N points toward current heading
      compassRotating.setAttribute('transform', `rotate(${normalizedHeading}, 256, 128)`);


    // ========================================
    // END STUDENT EDIT ZONE
    // ========================================

    }


    setInterval(() => { // do this repeatedly

    // Check localStorage for updates
      const thisSVGfilename = window.location.pathname;
    // this SVG expects a localStorage with the same name as its file
      const localStorageName =  thisSVGfilename.substring(thisSVGfilename.lastIndexOf('/') + 1, thisSVGfilename.lastIndexOf('.'));
      let instrumentValue = localStorage.getItem(localStorageName);



    if (instrumentValue !== null) {
      // Normalize heading to 0-360 range
      instrumentValue = ((instrumentValue % 360) + 360) % 360;

    } else {
    // no localStorage, so make up a number, so it spins around
    // Initialize static variables if they don't exist
    if (typeof window.testValue === 'undefined') {
      window.testValue = 0;
    }

    // Update the test value - continuously rotate
    window.testValue += 2; // increment by 2 degrees each time

    // Wrap around at 360
    if (window.testValue >= 360) {
      window.testValue = 0;
    }

    instrumentValue = window.testValue;
    console.log('no local storage \"'+localStorageName+'\", using test value:', instrumentValue);

     }

    updateSVG(instrumentValue)



    }, 50);  //end of setInterval code.  50 is 50 milliseconds or 20 times per second.

  //]]> // this is to make javascript work in the SVG, leave it alone
  </script>
</svg>
