<?xml version="1.0" encoding="UTF-8"?>
<svg id="battery" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 512 256">
  <defs>
    <style>
      #line {
        fill: none;
        stroke-width: 5px;
        stroke: #F00;
      }
      #back {
        fill: #231f20;
        stroke-width: 4px;
      }
    </style>
  </defs>
  <path id="back" d="M503.8,256c0-136.9-110.9-247.8-247.8-247.8S8.2,119.1,8.2,256"/>
  <line id="line"  x1="256" y1="252.9" x2="492.4" y2="252.9"/>
  <text x="0" y="40" style="font-family: Arial; font-size: 50px; font-weight: bold; fill: lime;">  Battery
</text>
 
<script type="text/javascript">
//<![CDATA[ // this is to make javascript work in the SVG, leave it alone

    function updateSVG(instrumentValue){
    // ========================================
    // STUDENT EDIT ZONE
    // This sections controls how the gauge displays
    // ========================================

    /**
     * Updates the gauge display
     * - The gauge needle (line) rotates to show level
     * - 0% = -180 degrees (pointing left)
     * - 50% = -90 degrees (pointing up)
     * - 100% = 0 degrees (pointing right)
     */

      // Calculate rotation angle
      // Formula: -180 degrees + (percentage * 1.8)
      const angle = -180 + instrumentValue * 1.8;


      // Get the needle line element
      const line = document.getElementById('line');
      if (!line) { 
        console.log('Cant find element to animate');
        return;
      }

      // Get the pivot point (start of the line)
      const x1 = parseFloat(line.getAttribute('x1'));
      const y1 = parseFloat(line.getAttribute('y1'));

      // Rotate the needle around its pivot point
      line.setAttribute('transform', `rotate(${angle}, ${x1}, ${y1})`);



    // ========================================
    // END STUDENT EDIT ZONE
    // ========================================

    }


    setInterval(() => { // do this repeatedly
    
    // Check localStorage for updates 
      const thisSVGfilename = window.location.pathname;
    // this SVG expects a localStorage with the same name as its file
      const localStorageName =  thisSVGfilename.substring(thisSVGfilename.lastIndexOf('/') + 1, thisSVGfilename.lastIndexOf('.')); 
      let instrumentValue = localStorage.getItem(localStorageName);
 


    if (instrumentValue !== null) {
      // Make sure percentage is between 0 and 100
      instrumentValue = Math.max(0, Math.min(100, instrumentValue));

    } else {
    // no localStorage, so make up a number, so it swings back and forth
    // Initialize static variables if they don't exist
    if (typeof window.testValue === 'undefined') {
      window.testValue = 0;
      window.testDirection = 1; // 1 for increasing, -1 for decreasing
    }

    // Update the test value
    window.testValue += window.testDirection * 2; // increment by 2 each time

    // Reverse direction at boundaries
    if (window.testValue >= 100) {
      window.testValue = 100;
      window.testDirection = -1;
    } else if (window.testValue <= 0) {
      window.testValue = 0;
      window.testDirection = 1;
    }

    instrumentValue = window.testValue;
    console.log('no local storage \"'+localStorageName+'\", using test value:', instrumentValue);

     } 
    
    updateSVG(instrumentValue)



    }, 50);  //end of setInterval code.  50 is 50 milliseconds or 20 times per second.

  //]]> // this is to make javascript work in the SVG, leave it alone
  </script>
</svg>
